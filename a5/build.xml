<!-- $Revision: 1.3 $ $Date: 2012/01/23 19:17:57 $ $Author: dw $    -->
<project name="CSC488 Compiler" default="help">
  <description>
    Compiler for CSC488 Assignments 3 - 5 customized by winter '13 group 8
  </description>
  <!-- src, build, lib and dist directories -->
  <property name="src" location="src"/>
  <property name="build" location="bin"/>
  <property name="lib" location="lib"/>
  <property name="extlib" location="extlib"/>
  <property name="runlib" location="runlib"/>
  <property name="dist" location="dist"/>
  <property name="basedir" location="bin"/>
  <property name="doc"  location="doc"/>

  <!-- true if this is a debug build -->
  <property name="debug_build" value="true"/>

  <property name="jflex.jar" value="${lib}/JFlex.jar" />
  <property name="cup.jar" value="${lib}/java-cup-v11a.jar" />
  <property name="runtime.jar" value="${lib}/java-cup-11a-runtime.jar" />
  <property name="runtime.jar.name" value="java-cup-11a-runtime.jar" />

  <!-- jar names of external libraries added by csc488 group 08 -->
  <property name="jansi.jar" value="jansi-1.9.jar" />
  <property name="commons-cli.jar" value="commons-cli2.jar" />
  <property name="commons-io.jar" value="commons-io-2.4.jar" />
  <property name="commons-exec.jar" value="commons-exec-1.1.jar" />

  <!-- name of submission tar -->
  <property name="submitfile.name" value="csc488h.A5.08.tar" />
 

  <!-- where to get jar files from -->
  <!-- Locations for cdf.toronto.edu     -->
  <property name="jflex.jar.url" 
        value="http://www.cdf.toronto.edu/~csc488h/winter/lib/JFlex.jar" />
  <property name="cup.jar.url" 
    value="http://www.cdf.toronto.edu/~csc488h/winter/lib/java-cup-v11a.jar" />
  <property name="runtime.jar.url" 
    value="http://www.cdf.toronto.edu/~csc488h/winter/lib/java-cup-11a-runtime.jar" />

  <!-- external library files -->
  <fileset id="extlibFileSet" dir="${extlib}">
    <include name="${jansi.jar}"/>
    <include name="${commons-cli.jar}"/>
    <include name="${commons-io.jar}"/>
    <include name="${commons-exec.jar}"/>
  </fileset>
  <path id="running.classpath">
    <pathelement location="${build}"/>
    <fileset dir="${lib}">
      <include name="${runtime.jar.name}"/>
    </fileset>
    <fileset refid="extlibFileSet"/>
  </path>

  <!-- set of external libraries used in the distribution jar -->
  <fileset id="jarlibFileSet" dir="${dist}">
    <include name="${jansi.jar}"/>
    <include name="${commons-cli.jar}"/>
    <include name="${commons-io.jar}"/>
    <include name="${commons-exec.jar}"/>
  </fileset>
  <path id="jar.classpath">
    <fileset refid="jarlibFileSet"/>
  </path>

  <target name="init">
    <tstamp/>
    <mkdir dir="${build}"/>
  </target>

  <target name="help" description="show help message">
    <echo message="Ant build file for CSC488. Useful targets:"/> 
    <echo message=""/> 
    <echo message="compiler488:      build the compiler"/>
    <echo message="clean:            remove all compiled files"/> 
    <echo message="gettools:         download development tools to local lib"/> 
    <echo message="                  DO THIS FIRST to load required tools"/>
        <echo message="jflex:            run jflex to produce a scanner"/>
        <echo message="jcup:             run java_cup to produce a parser"/>
    <echo message="compile:          compile the compiler"/> 
    <echo message="dist:             build a portable compiler488.jar"/> 
        <echo message="javadoc:          build javadoc documentation"/>
        <echo message="docclean:         remove all javadoc documentation"/>
        <echo message="jflexclean:       remove JFlex generated files"/>
        <echo message="jcupclean:        remove java_cup generated files"/>
    <echo message="realclean:        remove all compiled and generated files"/>
    <echo message="toolclean:        remove libraries imported by gettools"/>
        <echo message="distclean:        remove all files not in the distribution"/>
    <echo message="rebuild:          reclean followed by compile"/>
    <echo message=""/> 
  </target> 


  <target name="declare" description="define tasks for jflex and cup">
    <taskdef 
     classname="JFlex.anttask.JFlexTask" name="jflex" 
     classpath="${jflex.jar}"/>

    <taskdef
      classname="java_cup.anttask.CUPTask" name="cup"
      classpath="${cup.jar}"/>
  </target>


  <target name="gettools" description="download development tools">
    <mkdir dir="${lib}"/>
    <get src="${jflex.jar.url}" dest="${jflex.jar}"/>
    <get src="${cup.jar.url}" dest="${cup.jar}"/>
    <get src="${runtime.jar.url}" dest="${runtime.jar}"/>
    <!-- unpack java_cup runtime for use in dist target -->
    <mkdir dir="${runlib}" />
    <exec executable="jar" dir="${runlib}">
         <arg line="xf ${runtime.jar}"/> 
    </exec>
  </target>

  
  <target name="jflex" depends="declare,lexerUpdateCheck" description="generate scanner"
    unless="LexerOK">
    <jflex file="${src}/compiler488/parser/csc488.flex" />
  </target>

  <target name="lexerUpdateCheck" description="Check Lexer.java is upto date">
     <uptodate property="LexerOK"
    srcfile="${src}/compiler488/parser/csc488.flex"
        targetfile="${src}/compiler488/parser/Lexer.java"
     />
  </target>
    
  <target name="jflexclean">
    <delete file="${src}/compiler488/parser/Lexer.java" />
  </target>

  <target name="jcup" depends="declare,parserUpdateCheck" description="generate parser"
     unless="parserOK"  >
    <cup srcfile="${src}/compiler488/parser/csc488.cup"
     destdir="${src}"
         expect="0"
     force="true"
         parser="Parser" />
  </target>
  
  <target name="parserUpdateCheck" description="Check Parser.java is upto date">
     <uptodate property="parserOK"
    srcfile="${src}/compiler488/parser/csc488.cup"
        targetfile="${src}/compiler488/parser/Parser.java"
     />
  </target>
    
  <target name="jcupclean">
    <delete file="${src}/compiler488/parser/Parser.java"/>
    <delete file="${src}/compiler488/parser/sym.java"/>
  </target>

  <target name="compile" depends="init,jflex,jcup"
    description="compiles the source">
    <!-- workaround for bug in ant 1.8 -->
    <javac debug="${debug_build}" 
           includeantruntime="false"
       srcdir="${src}" destdir="${build}"   >
      <classpath refid="running.classpath"/>
    </javac>
  </target>

  <target name="dist" depends="compile"
        description="generate the distribution" >
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}"/>

    <!-- Copy the external libraries to the dist dir -->
    <copy todir="${dist}">
      <fileset refid="extlibFileSet"/>
    </copy>

    <!-- Convert the jar classpath into a manifestclasspath -->
    <manifestclasspath property="jar.manifestclasspath"
                       jarfile="${dist}/compiler488.jar">
      <classpath refid="jar.classpath"/>
    </manifestclasspath>

    <!-- Put everything in ${build} into the csc488.jar file -->
    <jar destfile="${dist}/compiler488.jar" basedir="${build}">

      <!-- Also include files unpacked from java-cup-11a-runtime.jar so compiler488.jar can run stand alone -->
      <fileset dir="${runlib}"/>

      <manifest>
        <attribute name="Main-Class"
                   value="compiler488.compiler.CompilerMain" />
        <attribute name="Class-Path" value="${jar.manifestclasspath}"/>
      </manifest>
    </jar>
  </target>

  <target name="submit" depends="clean"
        description="Puts the A3 submission files into a tar" >
    <!-- Put everything in ${build} into the csc488.jar file -->
    <tar destfile="${submitfile.name}" basedir="."
      excludes="lib/**,
                runlib/**,
                ${submitfile.name},
                RUNCOMPILER.ps1,
                run-icl.bat" />
  </target>

  <target name="javadoc">
    <mkdir dir="${doc}"/>
    <mkdir dir="${doc}/javadoc"/>
    <javadoc destdir="doc/javadoc" Use="true">
      <arg value="-private" />
      <fileset dir="${src}">
        <include name="**/*.java"/>
      </fileset>
      <classpath refid="running.classpath"/>
    </javadoc>
  </target>

  <target name="docclean"
        description="clean up doc" >
    <!-- Delete the ${doc}/javadoc directory tree -->
    <delete dir="${doc}/javadoc"/>
  </target>

  <target name="clean"
        description="clean up" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
    <delete file="${submitfile.name}"/>
  </target>

  <target name="realclean" depends="clean, jflexclean, jcupclean" />

  <!-- delete everything not in the distribution -->
  <target name="distclean" depends="realclean, docclean, toolclean" />

  <target name="toolclean" >
     <delete dir="${runlib}" />
     <delete dir="${lib}"   />
  </target>

  <target name="rebuild" depends="realclean,compile"/>

  <target name="compiler488" depends="compile"/>

</project>

