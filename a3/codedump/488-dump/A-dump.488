begin
    proc b2str(boolean yes)
    begin

        if yes then
            put "true"
        else
            put "false"
        fi

        return
    end

    proc b2strs(boolean yes)
    begin

        b2str(yes)
        put skip
        return
    end

    integer one()
    begin

        result 1
    end

    integer int1
    integer int2
    boolean bool1
    boolean bool2

    int1 := 1
    int2 := 2
    bool1 := true
    bool2 := false
    put "1 + 2 = ", 1 + 2, skip
    put "1 - 1 = ", 1 - one(), skip
    put "1 * 2 = ", int1 * int2, skip
    put "10 / 2 = ", 10 / int2, skip
    put "-1 + 2 = ", -int1 + int2, skip
    put "true | false = "
    b2strs(bool1 | bool2)
    put "true & false = "
    b2strs(bool1 & bool2)
    put "!true = "
    b2strs(!bool1)
    put "1 = 2 ? "
    b2strs(1 = 2)
    put "1 != 2 ? "
    b2strs(1 != 2)
    put "1 < 2 ? "
    b2strs(1 < 2)
    put "1 > 2 ? "
    b2strs(1 > 2)
    put "1 >= 2 ? "
    b2strs(1 >= 2)
    put "2 >= 2 ? "
    b2strs(2 >= 2)
    put "1 <= 2 ? "
    b2strs(1 <= 2)
    put "1 <= 1 ? "
    b2strs(1 <= 1)
    if (20 / 10 / 2) = 1 then
        put "20 / 10 / 2 = 1 (left associative)", skip
    else
        put "20 / 10 / 2 = 4 (right associative)", skip
    fi

    put "(20 / 10) * 2 = ", 20 / 10 * 2, skip
    put "(4 - 6) + 2 = ", 4 - 6 + 2, skip
    if -2 * 3 / 2 + 1 - 2 = -4 then
        put "-2 * 3 / 2 + 1 - 2 = (((-2 * 3) / 2) + 1) - 2", skip
    else
        put "unexpected result", skip
    fi

    if 1 + 0 = 1 | 0 & 1 then
        put "1 + 0 = 1 | 0 & 1 = ((1 + 0) = 1) | (0 & 1)", skip
    else
        put "unexpected result", skip
    fi

end
